{"Vn3L_ioAAAAJ": [["Ed Younis", 2020, "QFAST: Quantum Synthesis Using a Hierarchical Continuous Circuit Space"], ["Costin Iancu", 2020, "QFAST: Quantum Synthesis Using a Hierarchical Continuous Circuit Space"], ["Katherine Yelick", 2020, "QFAST: Quantum Synthesis Using a Hierarchical Continuous Circuit Space"], ["Nariyoshi Chida", 2020, "Is stateful packrat parsing really linear in practice? a counter-example, an improved grammar, and its parsing algorithms"], ["Yuhei Kawakoya", 2020, "Is stateful packrat parsing really linear in practice? a counter-example, an improved grammar, and its parsing algorithms"], ["Dai Ikarashi", 2020, "Is stateful packrat parsing really linear in practice? a counter-example, an improved grammar, and its parsing algorithms"], ["Kenji Takahashi", 2020, "Is stateful packrat parsing really linear in practice? a counter-example, an improved grammar, and its parsing algorithms"], ["Yves Le Traon", 2020, "Selecting fault revealing mutants"], ["Mike Papadakis", 2020, "Selecting fault revealing mutants"], ["Thierry Titcheu Chekam", 2020, "Selecting fault revealing mutants"], ["Tegawend\u00e9 Fran\u00e7ois D Assise Bissyande", 2020, "Selecting fault revealing mutants"], ["Hayawardh Vijayakumar", 2020, "PARTEMU: Enabling Dynamic Analysis of Real-World TrustZone Software Using Emulation"], ["Michael Grace", 2020, "PARTEMU: Enabling Dynamic Analysis of Real-World TrustZone Software Using Emulation"], ["Lee Harrison", 2020, "PARTEMU: Enabling Dynamic Analysis of Real-World TrustZone Software Using Emulation"], ["Rohan Padhye", 2020, "PARTEMU: Enabling Dynamic Analysis of Real-World TrustZone Software Using Emulation"], ["Willem Visser", 2019, "SAFFRON: Adaptive grammar-based fuzzing for worst-case analysis"], ["Xuan-Bach D Le", 2019, "SAFFRON: Adaptive grammar-based fuzzing for worst-case analysis"], ["Corina Pasareanu", 2019, "SAFFRON: Adaptive grammar-based fuzzing for worst-case analysis"], ["David Lo", 2019, "SAFFRON: Adaptive grammar-based fuzzing for worst-case analysis"], ["Yuto Otsuki", 2019, "EIGER: automated IOC generation for accurate and interpretable endpoint malware detection"], ["Yuma Kurogome", 2019, "EIGER: automated IOC generation for accurate and interpretable endpoint malware detection"], ["Tatsuya Mori", 2019, "EIGER: automated IOC generation for accurate and interpretable endpoint malware detection"], ["Makoto Iwamura", 2019, "EIGER: automated IOC generation for accurate and interpretable endpoint malware detection"], ["Syogo Hayashi", 2019, "EIGER: automated IOC generation for accurate and interpretable endpoint malware detection"], ["Ethan Smith", 2019, "Heuristics for Quantum Compiling with a Continuous Gate Set"], ["Ana Tudor", 2019, "Heuristics for Quantum Compiling with a Continuous Gate Set"], ["Irfan Siddiqi", 2019, "Heuristics for Quantum Compiling with a Continuous Gate Set"], ["Marc Grau Davis", 2019, "Heuristics for Quantum Compiling with a Continuous Gate Set"], ["Partha Protim Dhar", 2019, "Field screening of different genotypes of bitter gourd for infestation with the melon fruit fly, Bactrocera cucurbitae (Coquillett) in two agro-climatic zones of West \u2026"], ["Arunava Samanta", 2019, "Field screening of different genotypes of bitter gourd for infestation with the melon fruit fly, Bactrocera cucurbitae (Coquillett) in two agro-climatic zones of West \u2026"], ["Paul N Hilfinger", 2019, "ChocoPy: a programming language for compilers courses"], ["Rafael Dutra", 2019, "GUIDEDSAMPLER: Coverage-guided Sampling of SMT Solutions"], ["Jonathan Bachrach", 2019, "GUIDEDSAMPLER: Coverage-guided Sampling of SMT Solutions"], ["Ion Stoica", 2019, "AutoPandas: neural-backed generators for program synthesis"], ["Rohan Bavishi", 2019, "AutoPandas: neural-backed generators for program synthesis"], ["Roy Fox", 2019, "AutoPandas: neural-backed generators for program synthesis"], ["Caroline Lemieux", 2019, "AutoPandas: neural-backed generators for program synthesis"], ["Laurent Simon", 2019, "FuzzFactory: domain-specific fuzzing with waypoints"], ["Celeste Barnaby", 2019, "Aroma: Code recommendation via structural code search"], ["Satish Chandra", 2019, "Aroma: Code recommendation via structural code search"], ["Di Yang", 2019, "Aroma: Code recommendation via structural code search"], ["Sifei Luan", 2019, "Aroma: Code recommendation via structural code search"], ["Jose Cambronero", 2019, "When deep learning met code search"], ["Hongyu Li", 2019, "When deep learning met code search"], ["Seohyun Kim", 2019, "When deep learning met code search"], ["Rafael Tupynamb\u00e1 Dutra", 2019, "Efficient Sampling of SAT and SMT Solutions for Testing and Verification"], ["Theodore Slaman", 2019, "Efficient Sampling of SAT and SMT Solutions for Testing and Verification"], ["Sanjit Seshia", 2019, "Efficient Sampling of SAT and SMT Solutions for Testing and Verification"]]}